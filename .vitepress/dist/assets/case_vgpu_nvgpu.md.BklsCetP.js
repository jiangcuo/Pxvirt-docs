import{_ as a,c as n,o as i,ah as e}from"./chunks/framework.HzbgFGQH.js";const h=JSON.parse('{"title":"在PXVIRT 中安装Nvidia vGPU","description":"","frontmatter":{},"headers":[],"relativePath":"case/vgpu/nvgpu.md","filePath":"case/vgpu/nvgpu.md"}'),p={name:"case/vgpu/nvgpu.md"};function l(o,s,t,d,c,r){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="在pxvirt-中安装nvidia-vgpu" tabindex="-1">在PXVIRT 中安装Nvidia vGPU <a class="header-anchor" href="#在pxvirt-中安装nvidia-vgpu" aria-label="Permalink to “在PXVIRT 中安装Nvidia vGPU”">​</a></h1><p>注意，本文仅适合通过ISO安装Pxvirt的用户。</p><p>内核使用pve-kernel-6.x-openeuler</p><h2 id="硬件环境准备" tabindex="-1">硬件环境准备 <a class="header-anchor" href="#硬件环境准备" aria-label="Permalink to “硬件环境准备”">​</a></h2><ul><li>服务器bios 开启iommu，vt-d 或者smmu 或者sriov等 io虚拟化开关</li><li>PXVIRT 开启iommu</li></ul><h2 id="pxvirt-开启iommu" tabindex="-1">PXVIRT 开启iommu <a class="header-anchor" href="#pxvirt-开启iommu" aria-label="Permalink to “PXVIRT 开启iommu”">​</a></h2><p>请先判断是否通过grub启动，执行命令，<code>cat /proc/cmdline </code>，一般来说zfs启动使用<code>systemd-boot</code>启动，但还是需要判断</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>root@node1:~# cat /proc/cmdline </span></span>
<span class="line"><span>initrd=\\EFI\\proxmox\\6.6.0-7-openeuler\\initrd.img-6.6.0-7-openeuler root=ZFS=rpool/ROOT/pxvirt-1 boot=zfs biosdevname=0 net.ifnames=0</span></span></code></pre></div><p>如果这里是initrd开头的，看不到linux kernel 那么就是systemd-boot启动的。</p><p>如果像下面，有个<code>BOOT_IMAGE</code>就是grub启动的</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>oot@amd1:~# cat /proc/cmdline </span></span>
<span class="line"><span>BOOT_IMAGE=/boot/vmlinuz-6.6.0-6-openeuler root=/dev/mapper/pve-root ro quiet amd_iommu=on video=vesafb:off video=efifb:off video=simplefb:off pcie_acs_override=downstream</span></span></code></pre></div><p>或者执行下面指令，如果不报错，那么是systemd-boot</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cat /etc/kernel/cmdline</span></span></code></pre></div><h3 id="针对grub-配置iommu" tabindex="-1">针对grub 配置iommu <a class="header-anchor" href="#针对grub-配置iommu" aria-label="Permalink to “针对grub 配置iommu”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cat &gt; /etc/default/grub.d/iommu.cfg &lt;&lt;EOF</span></span>
<span class="line"><span>GRUB_CMDLINE_LINUX=&quot;iommu=pt intel_iommu=on amd_iommu=on&quot;</span></span>
<span class="line"><span>EOF</span></span>
<span class="line"><span>update-grub</span></span></code></pre></div><p>将重启生效</p><h3 id="针对systemd-boot-配置iommu" tabindex="-1">针对systemd-boot 配置iommu <a class="header-anchor" href="#针对systemd-boot-配置iommu" aria-label="Permalink to “针对systemd-boot 配置iommu”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>sed -i &#39;1s/$/ iommu=pt intel_iommu=on amd_iommu=on/&#39; /etc/kernel/cmdline</span></span>
<span class="line"><span>proxmox-boot-tool refresh</span></span></code></pre></div><h3 id="验证iommu" tabindex="-1">验证iommu <a class="header-anchor" href="#验证iommu" aria-label="Permalink to “验证iommu”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>dmesg |grep -i &#39;Adding to iommu group&#39;</span></span></code></pre></div><p>出现下面类似的输出即可</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>root@amd1:~# dmesg |grep -i &#39;Adding to iommu group&#39;</span></span>
<span class="line"><span>[    0.389629] pci 0000:00:01.0: Adding to iommu group 0</span></span>
<span class="line"><span>[    0.389648] pci 0000:00:02.0: Adding to iommu group 1</span></span>
<span class="line"><span>[    0.389660] pci 0000:00:02.1: Adding to iommu group 2</span></span>
<span class="line"><span>[    0.389673] pci 0000:00:02.2: Adding to iommu group 3</span></span>
<span class="line"><span>[    0.389684] pci 0000:00:02.3: Adding to iommu group 4</span></span>
<span class="line"><span>[    0.389705] pci 0000:00:08.0: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389715] pci 0000:00:08.1: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389736] pci 0000:00:14.0: Adding to iommu group 6</span></span>
<span class="line"><span>[    0.389746] pci 0000:00:14.3: Adding to iommu group 6</span></span>
<span class="line"><span>[    0.389795] pci 0000:00:18.0: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389806] pci 0000:00:18.1: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389817] pci 0000:00:18.2: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389828] pci 0000:00:18.3: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389839] pci 0000:00:18.4: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389851] pci 0000:00:18.5: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389862] pci 0000:00:18.6: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389872] pci 0000:00:18.7: Adding to iommu group 7</span></span>
<span class="line"><span>[    0.389884] pci 0000:01:00.0: Adding to iommu group 8</span></span>
<span class="line"><span>[    0.389897] pci 0000:02:00.0: Adding to iommu group 9</span></span>
<span class="line"><span>[    0.389909] pci 0000:03:00.0: Adding to iommu group 10</span></span>
<span class="line"><span>[    0.389923] pci 0000:04:00.0: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389927] pci 0000:04:00.1: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389932] pci 0000:04:00.2: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389936] pci 0000:04:00.3: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389941] pci 0000:04:00.4: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389945] pci 0000:04:00.6: Adding to iommu group 5</span></span>
<span class="line"><span>[    0.389950] pci 0000:04:00.7: Adding to iommu group 5</span></span></code></pre></div><h2 id="安装组件" tabindex="-1">安装组件 <a class="header-anchor" href="#安装组件" aria-label="Permalink to “安装组件”">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>apt update</span></span>
<span class="line"><span>apt install build-* dkms pve-headers-\`uname -r\`</span></span></code></pre></div><h2 id="nvidia-驱动兼容性" tabindex="-1">Nvidia 驱动兼容性 <a class="header-anchor" href="#nvidia-驱动兼容性" aria-label="Permalink to “Nvidia 驱动兼容性”">​</a></h2><p>PXVIRT 8.3 使用6.6 作为长期内核。</p><p>目前支持16.7 至 18.0 版本驱动。</p><h2 id="下载nvidia-驱动" tabindex="-1">下载nvidia 驱动 <a class="header-anchor" href="#下载nvidia-驱动" aria-label="Permalink to “下载nvidia 驱动”">​</a></h2><p>请从Nvdia 官网下载驱动</p><h2 id="做环境准备" tabindex="-1">做环境准备 <a class="header-anchor" href="#做环境准备" aria-label="Permalink to “做环境准备”">​</a></h2><p>Nvidia-vGPU 驱动和 <code>nouveau</code> 驱动不兼容，因此如果要安装vGPU驱动，需要禁用<code>nouveau</code></p><h3 id="卸载-nouveau" tabindex="-1">卸载 nouveau <a class="header-anchor" href="#卸载-nouveau" aria-label="Permalink to “卸载 nouveau”">​</a></h3><p>使用下面脚本，将将设备从 <code>nouveau</code>中卸载</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>for i in \`ls /sys/bus/pci/drivers/nouveau/|grep 00\`;do </span></span>
<span class="line"><span>    echo $i &gt; /sys/bus/pci/drivers/nouveau/unbind;</span></span>
<span class="line"><span>done</span></span></code></pre></div><h3 id="永久禁用-nouveau" tabindex="-1">永久禁用 nouveau <a class="header-anchor" href="#永久禁用-nouveau" aria-label="Permalink to “永久禁用 nouveau”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>echo &quot;blacklist nouveau&quot; &gt;&gt; /etc/modprobe.d/blacklist.conf </span></span>
<span class="line"><span>echo &quot;blacklist nvidiafb&quot; &gt;&gt; /etc/modprobe.d/blacklist.conf </span></span>
<span class="line"><span>update-initramfs -kall -u &gt; /dev/null 2&gt;&amp;1</span></span></code></pre></div><p>这个命令将会更新内核参数，重启之后就不会自动加载<code>nouveau</code>驱动了。</p><p>在安装驱动之前，建议进行重启。</p><h2 id="安装nvidia-驱动" tabindex="-1">安装Nvidia 驱动 <a class="header-anchor" href="#安装nvidia-驱动" aria-label="Permalink to “安装Nvidia 驱动”">​</a></h2><p>这里我们使用<code>NVIDIA-Linux-x86_64-550.144.02-vgpu-kvm.run</code> 驱动，版本为<code>17.5</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>sh NVIDIA-Linux-x86_64-550.144.02-vgpu-kvm.run \\</span></span>
<span class="line"><span>--dkms -q -s -z \\</span></span>
<span class="line"><span>--no-x-check --no-nouveau-check --no-nvidia-modprobe</span></span></code></pre></div><p>这是下面参数的解释：</p><ul><li><code>--dkms</code>使用dkms安装，在以后升级内核时，会自动重新构建驱动</li><li><code>-q</code> 默认所有弹窗提示都为yes</li><li><code>-s</code> 安静输出</li><li><code>--no-x-check</code> 不检查x服务器</li><li><code>--no-nouveau-check</code> 不检查<code>nouveau</code>模块，这个往往适合安装，但是如果<code>nouveau</code>还存在，加载<code>nvidia</code>驱动的时候仍然会报错</li><li><code>--no-nvidia-modprobe</code> 安装结束之后，不自动加载<code>nvidia</code>驱动。这个有助于顺利安装</li></ul><p>安装之后，可以重启一次，确保下面的方法可以正常的执行。</p><h2 id="配置vgpu服务" tabindex="-1">配置vGPU服务 <a class="header-anchor" href="#配置vgpu服务" aria-label="Permalink to “配置vGPU服务”">​</a></h2><p>如果是A5000之后的sriov卡，需要执行sriov来切分显卡。下面命令将创建一个服务，在每次开机时，都能为所有显卡进行切分。</p><p>如果你只想切分某块或者某几块显卡，而不是全部显卡，你可以把ALL改成对应的显卡编号。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cat &gt; /etc/systemd/system/nvidia-vgpu-sriov.service &lt;&lt;EOF</span></span>
<span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=Enable NVIDIA SR-IOV</span></span>
<span class="line"><span>After=network.target nvidia-vgpud.service nvidia-vgpu-mgr.service</span></span>
<span class="line"><span>Before=pve-guests.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Type=oneshot</span></span>
<span class="line"><span>#ExecStartPre=/bin/sleep 5</span></span>
<span class="line"><span>ExecStart=/usr/lib/nvidia/sriov-manage -e ALL</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span>
<span class="line"><span>EOF</span></span></code></pre></div><p>启动服务。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>systemctl daemon-reload</span></span>
<span class="line"><span>systemctl enable nvidia-vgpu-mgr.service </span></span>
<span class="line"><span>systemctl enable nvidia-vgpu-sriov.service</span></span>
<span class="line"><span>systemctl enable nvidia-vgpud.service </span></span>
<span class="line"><span>systemctl start nvidia-vgpud.service</span></span>
<span class="line"><span>systemctl start nvidia-vgpu-mgr.service</span></span>
<span class="line"><span>systemctl start nvidia-vgpu-sriov.service</span></span></code></pre></div><h2 id="在pxvirt中使用vgpu" tabindex="-1">在PXVIRT中使用vGPU <a class="header-anchor" href="#在pxvirt中使用vgpu" aria-label="Permalink to “在PXVIRT中使用vGPU”">​</a></h2><p>选中一个虚拟机，点击添加设备，选择RAW设备，如果不出意外，medev</p>`,52)]))}const g=a(p,[["render",l]]);export{h as __pageData,g as default};
