import{_ as e,c as s,o as r,ah as d,j as a}from"./chunks/framework.HzbgFGQH.js";const i="/assets/setup1.DLUI8acA.png",u=JSON.parse('{"title":"初次使用","description":"","frontmatter":{},"headers":[],"relativePath":"setup.md","filePath":"setup.md"}'),o={name:"setup.md"},c=i+"#pic_center";function n(p,t,h,l,_,x){return r(),s("div",null,t[0]||(t[0]=[d('<h1 id="初次使用" tabindex="-1">初次使用 <a class="header-anchor" href="#初次使用" aria-label="Permalink to “初次使用”">​</a></h1><p>假设你已经完成了安装，同时进入了https://xxx:8006页面。你可以根据我们的向导创建第一个虚拟机。</p><h1 id="上传iso" tabindex="-1">上传ISO <a class="header-anchor" href="#上传iso" aria-label="Permalink to “上传ISO”">​</a></h1><p>你可以点击<code>local</code>,导航到<code>ISO images</code>,有个<code>upload</code>按钮即可上传iso文件</p>',4),a("p",null,[a("img",{src:c,alt:"alt text",loading:"lazy"})],-1),d('<h1 id="创建第一个虚拟机" tabindex="-1">创建第一个虚拟机 <a class="header-anchor" href="#创建第一个虚拟机" aria-label="Permalink to “创建第一个虚拟机”">​</a></h1><p>因为PXVIRT是跨架构的一个虚拟化平台，虽然对不同架构做了兼容处理，我们在创建时仍然需要注意。</p><p>这里我们列出了一个表格，以便能够正确创建可引导的虚拟机，</p><table tabindex="0"><thead><tr><th>配置清单</th><th>x86_64</th><th>loongarch64</th><th>aarch64</th><th>s390x</th><th>ppc64</th><th>riscv64</th></tr></thead><tbody><tr><td>Arch</td><td>x86_64</td><td>loongarch64</td><td>aarch64</td><td>s390x</td><td>ppc64</td><td>riscv64</td></tr><tr><td>Guest OS</td><td>任意</td><td>Linux 6.x-2.6</td><td>Linux 6.x-2.6</td><td>Linux 6.x-2.6</td><td>Linux 6.x-2.6</td><td>Linux 6.x-2.6</td></tr><tr><td>Machine</td><td>q35&amp;i440fx</td><td>virt</td><td>virt</td><td>s390-ccw-virtio</td><td>pseries</td><td>virt</td></tr><tr><td>Bios</td><td>任意</td><td>OVMF</td><td>OVMF</td><td>Seabios</td><td>Seabios</td><td>OVMF</td></tr><tr><td>Disk</td><td>scsi &amp; nvme</td><td>scsi &amp; nvme</td><td>scsi &amp; nvme</td><td>scsi</td><td>scsi</td><td>scsi</td></tr><tr><td>Cpu sockets</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>Cpu Type</td><td>max</td><td>la464</td><td>host</td><td>max</td><td>power10</td><td>max</td></tr></tbody></table><p>现在我们分为2种情况，进行实践一下。</p><ul><li><a href="./setup/Windows-on-x86.html">在x86上安装windows</a></li><li><a href="./setup/Linux-on-port.html">在arm64/龙芯上安装Linux</a></li></ul>',6)]))}const f=e(o,[["render",n]]);export{u as __pageData,f as default};
